#####
# Common stuff goes at the front,
# so that we can take advantage of the
# shared layers that docker provides.
#####
#FROM f69m/ubuntu32:trusty
FROM veilleperso/trusty32
USER root
ENV HOME /root
WORKDIR /root

ENV DEBIAN_FRONTEND noninteractive

ENV NCTEST_VERSION 1.1.0 - development
ENV VERSION_FILE VERSION.md

###
# Set up a couple environmental variables.
###

ENV HDF5VER 1.8.18
ENV HDF5_VER hdf5-${HDF5VER}
ENV HDF5_FILE ${HDF5_VER}.tar.bz2
ENV PNCVER 1.6.1
##
# Let the user specify the branches.
##
ENV CBRANCH master
ENV FBRANCH master
ENV CXXBRANCH master
ENV PBRANCH master
ENV NCOBRANCH 4.6.2

ENV BITNESS 32
ENV USE_CC gcc
ENV USE_CXX g++

ENV RUNC TRUE
ENV RUNF TRUE
ENV RUNCXX TRUE
ENV RUNP TRUE
ENV RUNNCO TRUE

ENV USEDASH FALSE

ENV USEAC FALSE
ENV USECMAKE TRUE

ENV CREPS 1
ENV FREPS 1
ENV CXXREPS 1
ENV PREPS 1
ENV NCOREPS 1

###
# Install common packages.
###

RUN apt-get update
RUN apt-get -y upgrade
###
# Install some basics.
###

RUN apt-get -y install g++ gfortran libtool automake autoconf m4 bison flex libcurl4-openssl-dev zlib1g-dev git wget curl libjpeg-dev cmake python cython python-numpy gdb dos2unix antlr libantlr-dev libexpat1-dev libxml2-dev gsl-bin libgsl0-dev udunits-bin libudunits2-0 libudunits2-dev clang
RUN apt-get -y install bzip2 zip
###
# Pre-fetch tarballs that we'll need.
###

RUN wget http://www.hdfgroup.org/ftp/lib-external/szip/2.1/src/szip-2.1.tar.gz
RUN wget http://cucis.ece.northwestern.edu/projects/PnetCDF/Release/parallel-netcdf-1.6.1.tar.bz2 && wget http://cucis.ece.northwestern.edu/projects/PnetCDF/Release/parallel-netcdf-1.7.0.tar.bz2
RUN wget https://support.hdfgroup.org/ftp/HDF/releases/HDF4.2.12/src/hdf-4.2.12.tar.bz2
RUN wget https://support.hdfgroup.org/ftp/HDF5/current18/src/${HDF5_FILE}

###
# Uncompress tarballs.
###

RUN tar -jxf hdf-4.2.12.tar.bz2
RUN tar -jxf ${HDF5_FILE}
RUN tar -zxf szip-2.1.tar.gz
RUN tar -jxf parallel-netcdf-1.6.1.tar.bz2 && tar -jxf parallel-netcdf-1.7.0.tar.bz2

###
# Build szip, since we will use it for
# all of our projects.
###

RUN cd szip-2.1 && ./configure --prefix=/usr && make install -j 4
RUN rm -rf szip-2.1

###
# Add the utility scripts, for portability.
###
COPY run_serial_tests.sh /root/
RUN dos2unix /root/run_serial_tests.sh

COPY run_par_tests.sh /root/
RUN dos2unix /root/run_par_tests.sh

RUN echo "Version:\n\tunidata/nctests ($BITNESS) :\t$NCTEST_VERSION\t$(date)" > $VERSION_FILE

COPY run_all_nctest_images.sh /root/
COPY build_all_nctest_images.sh /root/
COPY push_all_nctest_images.sh /root/
COPY squash_all_nctest_images.sh /root/
COPY README.md /root/

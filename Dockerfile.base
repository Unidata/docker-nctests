#####
# Common stuff goes at the front,
# so that we can take advantage of the
# shared layers that docker provides.
#####
FROM ubuntu:trusty
USER root
ENV HOME /root
WORKDIR /root

###
# Set up a couple environmental variables.
###

ENV HDF5VER 1.8.15-patch1
ENV HDF5_VER hdf5-${HDF5VER}
ENV HDF5_FILE ${HDF5_VER}.tar.bz2

##
# Let the user specify the branches.
##
ENV CBRANCH master
ENV FBRANCH master
ENV CXXBRANCH master
ENV PBRANCH master

ENV BITNESS 64

ENV RUNF TRUE
ENV RUNCXX TRUE
ENV RUNP TRUE

ENV USEDASH TRUE

ENV USEAC FALSE
ENV USECMAKE TRUE

ENV CREPS 1
ENV FREPS 1
ENV CXXREPS 1
ENV PREPS 1

###
# Install common packages.
###

RUN apt-get update
RUN apt-get -y upgrade
###
# Install some basics.
###

RUN apt-get -y install g++ gfortran libtool automake autoconf m4 bison flex libcurl4-openssl-dev zlib1g-dev git wget curl libjpeg-dev cmake python cython python-numpy
RUN apt-get -y install gdb

###
# Pre-fetch tarballs that we'll need.
###

RUN wget http://www.hdfgroup.org/ftp/lib-external/szip/2.1/src/szip-2.1.tar.gz
RUN wget http://cucis.ece.northwestern.edu/projects/PnetCDF/Release/parallel-netcdf-1.6.1.tar.bz2
RUN wget http://www.hdfgroup.org/ftp/HDF/HDF_Current/src/hdf-4.2.11.tar.bz2
RUN wget http://www.hdfgroup.org/ftp/HDF5/releases/${HDF5_VER}/src/${HDF5_FILE}



###
# Uncompress tarballs.
###

RUN tar -jxf hdf-4.2.11.tar.bz2
RUN tar -jxf ${HDF5_FILE}
RUN tar -zxf szip-2.1.tar.gz
RUN tar -jxf parallel-netcdf-1.6.1.tar.bz2

###
# Build szip, since we will use it for
# all of our projects.
###

RUN cd szip-2.1 && ./configure --prefix=/usr && make install -j 4
RUN rm -rf szip-2.1

###
# Add the utility scripts, for portability.
###

COPY run_all_nctest_images.sh /root/
COPY build_all_nctest_images.sh /root/
COPY push_all_nctest_images.sh /root/
COPY squash_all_nctest_images.sh /root/
